{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tylerkomoroske/react/fluentstream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tylerkomoroske/react/fluentstream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { fsBeer, localProxy } from 'endpoints';\nimport { ADD_BEER, OPEN_COOLER, UPDATE_LIKES } from 'actions/types';\nexport function addBeer(beer) {\n  var payload;\n  var req = {\n    name: beer,\n    likes: 0\n  };\n  var response = axios.post(localProxy + fsBeer, req).then(function (response) {\n    if (response.status === 204) {\n      payload = req;\n      return;\n    } else if (response.status === 200) {\n      payload = response;\n      return;\n    }\n  }).catch(function (error) {\n    return new Error(error);\n  });\n  return {\n    type: ADD_BEER,\n    payload: payload\n  };\n}\nexport function updateLikes(beer, typeOfLike) {\n  var numberOfLikes;\n\n  if (typeOfLike === 'increase') {\n    numberOfLikes = beer.likes + 1;\n  } else if (typeOfLike === 'decrease') {\n    numberOfLikes = beer.likes - 1;\n  }\n\n  var response = axios.put(localProxy + fsBeer + beer.id, {\n    likes: numberOfLikes\n  }).then(function (response) {\n    if (response.status === 204) {\n      return {\n        id: beer.id,\n        name: beer.name,\n        likes: numberOfLikes\n      };\n    } else if (response.status === 200) {\n      return response;\n    }\n  }).catch(function (error) {\n    return new Error(error);\n  });\n  return {\n    type: UPDATE_LIKES,\n    payload: response\n  };\n}\nexport function openCooler() {\n  return _openCooler.apply(this, arguments);\n}\n\nfunction _openCooler() {\n  _openCooler = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"OPEN COOLER CALLED\");\n            response = axios.get(localProxy + fsBeer).then(function (response) {\n              return response;\n            }).catch(function (error) {\n              return new Error(error);\n            });\n            return _context.abrupt(\"return\", {\n              type: OPEN_COOLER,\n              payload: response\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _openCooler.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/tylerkomoroske/react/fluentstream/src/actions/index.js"],"names":["axios","fsBeer","localProxy","ADD_BEER","OPEN_COOLER","UPDATE_LIKES","addBeer","beer","payload","req","name","likes","response","post","then","status","catch","error","Error","type","updateLikes","typeOfLike","numberOfLikes","put","id","openCooler","console","log","get"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,WAAnC;AACA,SAASC,QAAT,EACSC,WADT,EAESC,YAFT,QAGM,eAHN;AAKA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,MAAIC,OAAJ;AACA,MAAMC,GAAG,GAAG;AAAEC,IAAAA,IAAI,EAAEH,IAAR;AAAcI,IAAAA,KAAK,EAAE;AAArB,GAAZ;AACA,MAAMC,QAAQ,GAAGZ,KAAK,CAACa,IAAN,CAAWX,UAAU,GAAGD,MAAxB,EAAgCQ,GAAhC,EAChBK,IADgB,CACX,UAAAF,QAAQ,EAAI;AAChB,QAAIA,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BP,MAAAA,OAAO,GAAGC,GAAV;AACA;AACD,KAHD,MAGO,IAAIG,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAClCP,MAAAA,OAAO,GAAGI,QAAV;AACA;AACD;AACF,GATgB,EAUhBI,KAVgB,CAUV,UAAAC,KAAK,EAAI;AACd,WAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,GAZgB,CAAjB;AAcA,SAAO;AACLE,IAAAA,IAAI,EAAEhB,QADD;AAELK,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID;AAED,OAAO,SAASY,WAAT,CAAqBb,IAArB,EAA2Bc,UAA3B,EAAuC;AAC5C,MAAIC,aAAJ;;AAEA,MAAID,UAAU,KAAK,UAAnB,EAA+B;AAC7BC,IAAAA,aAAa,GAAGf,IAAI,CAACI,KAAL,GAAa,CAA7B;AACD,GAFD,MAEO,IAAIU,UAAU,KAAK,UAAnB,EAA+B;AACpCC,IAAAA,aAAa,GAAGf,IAAI,CAACI,KAAL,GAAa,CAA7B;AACD;;AAED,MAAMC,QAAQ,GAAGZ,KAAK,CAACuB,GAAN,CACfrB,UAAU,GAAGD,MAAb,GAAsBM,IAAI,CAACiB,EADZ,EAEf;AAACb,IAAAA,KAAK,EAAEW;AAAR,GAFe,EAGfR,IAHe,CAGV,UAAAF,QAAQ,EAAI;AACjB,QAAIA,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,aAAO;AAACS,QAAAA,EAAE,EAAEjB,IAAI,CAACiB,EAAV;AAAcd,QAAAA,IAAI,EAAEH,IAAI,CAACG,IAAzB;AAA+BC,QAAAA,KAAK,EAAEW;AAAtC,OAAP;AACD,KAFD,MAEO,IAAIV,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAClC,aAAOH,QAAP;AACD;AACF,GATgB,EAUhBI,KAVgB,CAUV,UAAAC,KAAK,EAAI;AACd,WAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,GAZgB,CAAjB;AAcA,SAAO;AACLE,IAAAA,IAAI,EAAEd,YADD;AAELG,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID;AAED,gBAAsBa,UAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACMf,YAAAA,QAFD,GAEYZ,KAAK,CAAC4B,GAAN,CAAU1B,UAAU,GAAGD,MAAvB,EAChBa,IADgB,CACX,UAAAF,QAAQ,EAAI;AAChB,qBAAOA,QAAP;AACD,aAHgB,EAIhBI,KAJgB,CAIV,UAAAC,KAAK,EAAI;AACd,qBAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,aANgB,CAFZ;AAAA,6CAUE;AACLE,cAAAA,IAAI,EAAEf,WADD;AAELI,cAAAA,OAAO,EAAEI;AAFJ,aAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios'\n\nimport { fsBeer, localProxy } from 'endpoints'\nimport { ADD_BEER,\n         OPEN_COOLER,\n         UPDATE_LIKES}\n from 'actions/types'\n\nexport function addBeer(beer) {\n  let payload\n  const req = { name: beer, likes: 0 }\n  const response = axios.post(localProxy + fsBeer, req)\n  .then(response => {\n    if (response.status === 204) {\n      payload = req\n      return\n    } else if (response.status === 200) {\n      payload = response\n      return\n    }\n  })\n  .catch(error => {\n    return new Error(error)\n  })\n\n  return {\n    type: ADD_BEER,\n    payload: payload\n  }\n}\n\nexport function updateLikes(beer, typeOfLike) {\n  let numberOfLikes\n\n  if (typeOfLike === 'increase') {\n    numberOfLikes = beer.likes + 1\n  } else if (typeOfLike === 'decrease') {\n    numberOfLikes = beer.likes - 1\n  }\n\n  const response = axios.put(\n    localProxy + fsBeer + beer.id,\n    {likes: numberOfLikes}\n  ).then(response => {\n    if (response.status === 204) {\n      return {id: beer.id, name: beer.name, likes: numberOfLikes}\n    } else if (response.status === 200) {\n      return response\n    }\n  })\n  .catch(error => {\n    return new Error(error)\n  })\n\n  return {\n    type: UPDATE_LIKES,\n    payload: response\n  }\n}\n\nexport async function openCooler() {\n  console.log(\"OPEN COOLER CALLED\")\n  const response = axios.get(localProxy + fsBeer)\n  .then(response => {\n    return response\n  })\n  .catch(error => {\n    return new Error(error)\n  })\n\n  return {\n    type: OPEN_COOLER,\n    payload: response\n  }\n}\n"]},"metadata":{},"sourceType":"module"}