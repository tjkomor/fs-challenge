{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tylerkomoroske/react/fluentstream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tylerkomoroske/react/fluentstream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { fsBeer, localProxy } from 'endpoints';\nimport { ADD_BEER, OPEN_COOLER, UPDATE_LIKES } from 'actions/types';\nexport function addBeer(beerName) {\n  var response = axios.post(localProxy + fsBeer, req).then(function (response) {\n    if (response.status === 204) {\n      var _req = {\n        name: beerName,\n        likes: 0\n      };\n      return _req;\n    }\n  }).catch(function (error) {\n    return new Error(error);\n  });\n  return {\n    type: ADD_BEER,\n    payload: req\n  };\n}\nexport function updateLikes(beer, typeOfLike) {\n  var numberOfLikes;\n\n  if (typeOfLike === 'increase') {\n    numberOfLikes = beer.likes + 1;\n  } else if (typeOfLike === 'decrease') {\n    numberOfLikes = beer.likes - 1;\n  }\n\n  var response = axios.put(localProxy + fsBeer + beer.id, {\n    likes: numberOfLikes\n  }).then(function (response) {\n    if (response.status === 204) {\n      return {\n        id: beer.id,\n        name: beer.name,\n        likes: numberOfLikes\n      };\n    } else if (response.status === 200) {\n      return response;\n    }\n  }).catch(function (error) {\n    return new Error(error);\n  });\n  return {\n    type: UPDATE_LIKES,\n    payload: response\n  };\n}\nexport function openCooler() {\n  return _openCooler.apply(this, arguments);\n}\n\nfunction _openCooler() {\n  _openCooler = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"OPEN COOLER CALLED\");\n            response = axios.get(localProxy + fsBeer).then(function (response) {\n              return response;\n            }).catch(function (error) {\n              return new Error(error);\n            });\n            return _context.abrupt(\"return\", {\n              type: OPEN_COOLER,\n              payload: response\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _openCooler.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/tylerkomoroske/react/fluentstream/src/actions/index.js"],"names":["axios","fsBeer","localProxy","ADD_BEER","OPEN_COOLER","UPDATE_LIKES","addBeer","beerName","response","post","req","then","status","name","likes","catch","error","Error","type","payload","updateLikes","beer","typeOfLike","numberOfLikes","put","id","openCooler","console","log","get"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,WAAnC;AACA,SAASC,QAAT,EACSC,WADT,EAESC,YAFT,QAGM,eAHN;AAKA,OAAO,SAASC,OAAT,CAAiBC,QAAjB,EAA2B;AAChC,MAAMC,QAAQ,GAAGR,KAAK,CAACS,IAAN,CAAWP,UAAU,GAAGD,MAAxB,EAAgCS,GAAhC,EAChBC,IADgB,CACX,UAAAH,QAAQ,EAAI;AAChB,QAAIA,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAMF,IAAG,GAAG;AAAEG,QAAAA,IAAI,EAAEN,QAAR;AAAkBO,QAAAA,KAAK,EAAE;AAAzB,OAAZ;AACA,aAAOJ,IAAP;AACD;AACF,GANgB,EAOhBK,KAPgB,CAOV,UAAAC,KAAK,EAAI;AACd,WAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,GATgB,CAAjB;AAWA,SAAO;AACLE,IAAAA,IAAI,EAAEf,QADD;AAELgB,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID;AAED,OAAO,SAASU,WAAT,CAAqBC,IAArB,EAA2BC,UAA3B,EAAuC;AAC5C,MAAIC,aAAJ;;AAEA,MAAID,UAAU,KAAK,UAAnB,EAA+B;AAC7BC,IAAAA,aAAa,GAAGF,IAAI,CAACP,KAAL,GAAa,CAA7B;AACD,GAFD,MAEO,IAAIQ,UAAU,KAAK,UAAnB,EAA+B;AACpCC,IAAAA,aAAa,GAAGF,IAAI,CAACP,KAAL,GAAa,CAA7B;AACD;;AAED,MAAMN,QAAQ,GAAGR,KAAK,CAACwB,GAAN,CACftB,UAAU,GAAGD,MAAb,GAAsBoB,IAAI,CAACI,EADZ,EAEf;AAACX,IAAAA,KAAK,EAAES;AAAR,GAFe,EAGfZ,IAHe,CAGV,UAAAH,QAAQ,EAAI;AACjB,QAAIA,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,aAAO;AAACa,QAAAA,EAAE,EAAEJ,IAAI,CAACI,EAAV;AAAcZ,QAAAA,IAAI,EAAEQ,IAAI,CAACR,IAAzB;AAA+BC,QAAAA,KAAK,EAAES;AAAtC,OAAP;AACD,KAFD,MAEO,IAAIf,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAClC,aAAOJ,QAAP;AACD;AACF,GATgB,EAUhBO,KAVgB,CAUV,UAAAC,KAAK,EAAI;AACd,WAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,GAZgB,CAAjB;AAcA,SAAO;AACLE,IAAAA,IAAI,EAAEb,YADD;AAELc,IAAAA,OAAO,EAAEX;AAFJ,GAAP;AAID;AAED,gBAAsBkB,UAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACMpB,YAAAA,QAFD,GAEYR,KAAK,CAAC6B,GAAN,CAAU3B,UAAU,GAAGD,MAAvB,EAChBU,IADgB,CACX,UAAAH,QAAQ,EAAI;AAChB,qBAAOA,QAAP;AACD,aAHgB,EAIhBO,KAJgB,CAIV,UAAAC,KAAK,EAAI;AACd,qBAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,aANgB,CAFZ;AAAA,6CAUE;AACLE,cAAAA,IAAI,EAAEd,WADD;AAELe,cAAAA,OAAO,EAAEX;AAFJ,aAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios'\n\nimport { fsBeer, localProxy } from 'endpoints'\nimport { ADD_BEER,\n         OPEN_COOLER,\n         UPDATE_LIKES}\n from 'actions/types'\n\nexport function addBeer(beerName) {\n  const response = axios.post(localProxy + fsBeer, req)\n  .then(response => {\n    if (response.status === 204) {\n      const req = { name: beerName, likes: 0 }\n      return req\n    }\n  })\n  .catch(error => {\n    return new Error(error)\n  })\n\n  return {\n    type: ADD_BEER,\n    payload: req\n  }\n}\n\nexport function updateLikes(beer, typeOfLike) {\n  let numberOfLikes\n\n  if (typeOfLike === 'increase') {\n    numberOfLikes = beer.likes + 1\n  } else if (typeOfLike === 'decrease') {\n    numberOfLikes = beer.likes - 1\n  }\n\n  const response = axios.put(\n    localProxy + fsBeer + beer.id,\n    {likes: numberOfLikes}\n  ).then(response => {\n    if (response.status === 204) {\n      return {id: beer.id, name: beer.name, likes: numberOfLikes}\n    } else if (response.status === 200) {\n      return response\n    }\n  })\n  .catch(error => {\n    return new Error(error)\n  })\n\n  return {\n    type: UPDATE_LIKES,\n    payload: response\n  }\n}\n\nexport async function openCooler() {\n  console.log(\"OPEN COOLER CALLED\")\n  const response = axios.get(localProxy + fsBeer)\n  .then(response => {\n    return response\n  })\n  .catch(error => {\n    return new Error(error)\n  })\n\n  return {\n    type: OPEN_COOLER,\n    payload: response\n  }\n}\n"]},"metadata":{},"sourceType":"module"}