{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tylerkomoroske/react/fluentstream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tylerkomoroske/react/fluentstream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { fsBeer, localProxy } from 'endpoints';\nimport { ADD_BEER, OPEN_COOLER, UPDATE_LIKES } from 'actions/types';\nexport function addBeer(beer) {\n  var req = {\n    name: beer,\n    likes: 0\n  };\n  var response = axios.post(localProxy + fsBeer, req).then(function (response) {\n    if (response.status === 204) {\n      return req;\n    } else if (response.status === 200) {\n      return response;\n    }\n  }).catch(function (error) {\n    return new Error(error);\n  });\n  return {\n    type: ADD_BEER,\n    payload: req\n  };\n}\nexport function updateLikes(beer, typeOfLike) {\n  var numberOfLikes;\n\n  if (typeOfLike === 'increase') {\n    numberOfLikes = beer.likes + 1;\n  } else if (typeOfLike === 'decrease') {\n    numberOfLikes = beer.likes - 1;\n  }\n\n  var response = axios.put(localProxy + fsBeer + beer.id, {\n    likes: numberOfLikes\n  }).then(function (response) {\n    if (response.status === 204) {\n      return {\n        id: beer.id,\n        name: beer.name,\n        likes: numberOfLikes\n      };\n    } else if (response.status === 200) {\n      return response;\n    }\n  }).catch(function (error) {\n    return new Error(error);\n  });\n  return {\n    type: UPDATE_LIKES,\n    payload: response\n  };\n}\nexport function openCooler() {\n  return _openCooler.apply(this, arguments);\n}\n\nfunction _openCooler() {\n  _openCooler = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            response = axios.get(localProxy + fsBeer).then(function (response) {\n              return response;\n            }).catch(function (error) {\n              return new Error(error);\n            });\n            return _context.abrupt(\"return\", {\n              type: OPEN_COOLER,\n              payload: response\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _openCooler.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/tylerkomoroske/react/fluentstream/src/actions/index.js"],"names":["axios","fsBeer","localProxy","ADD_BEER","OPEN_COOLER","UPDATE_LIKES","addBeer","beer","req","name","likes","response","post","then","status","catch","error","Error","type","payload","updateLikes","typeOfLike","numberOfLikes","put","id","openCooler","get"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,WAAnC;AACA,SAASC,QAAT,EACSC,WADT,EAESC,YAFT,QAGM,eAHN;AAKA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,MAAMC,GAAG,GAAG;AAAEC,IAAAA,IAAI,EAAEF,IAAR;AAAcG,IAAAA,KAAK,EAAE;AAArB,GAAZ;AACA,MAAMC,QAAQ,GAAGX,KAAK,CAACY,IAAN,CAAWV,UAAU,GAAGD,MAAxB,EAAgCO,GAAhC,EAChBK,IADgB,CACX,UAAAF,QAAQ,EAAI;AAChB,QAAIA,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,aAAON,GAAP;AACD,KAFD,MAEO,IAAIG,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAClC,aAAOH,QAAP;AACD;AACF,GAPgB,EAQhBI,KARgB,CAQV,UAAAC,KAAK,EAAI;AACd,WAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,GAVgB,CAAjB;AAYA,SAAO;AACLE,IAAAA,IAAI,EAAEf,QADD;AAELgB,IAAAA,OAAO,EAAEX;AAFJ,GAAP;AAID;AAED,OAAO,SAASY,WAAT,CAAqBb,IAArB,EAA2Bc,UAA3B,EAAuC;AAC5C,MAAIC,aAAJ;;AAEA,MAAID,UAAU,KAAK,UAAnB,EAA+B;AAC7BC,IAAAA,aAAa,GAAGf,IAAI,CAACG,KAAL,GAAa,CAA7B;AACD,GAFD,MAEO,IAAIW,UAAU,KAAK,UAAnB,EAA+B;AACpCC,IAAAA,aAAa,GAAGf,IAAI,CAACG,KAAL,GAAa,CAA7B;AACD;;AAED,MAAMC,QAAQ,GAAGX,KAAK,CAACuB,GAAN,CACfrB,UAAU,GAAGD,MAAb,GAAsBM,IAAI,CAACiB,EADZ,EAEf;AAACd,IAAAA,KAAK,EAAEY;AAAR,GAFe,EAGfT,IAHe,CAGV,UAAAF,QAAQ,EAAI;AACjB,QAAIA,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,aAAO;AAACU,QAAAA,EAAE,EAAEjB,IAAI,CAACiB,EAAV;AAAcf,QAAAA,IAAI,EAAEF,IAAI,CAACE,IAAzB;AAA+BC,QAAAA,KAAK,EAAEY;AAAtC,OAAP;AACD,KAFD,MAEO,IAAIX,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAClC,aAAOH,QAAP;AACD;AACF,GATgB,EAUhBI,KAVgB,CAUV,UAAAC,KAAK,EAAI;AACd,WAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,GAZgB,CAAjB;AAcA,SAAO;AACLE,IAAAA,IAAI,EAAEb,YADD;AAELc,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID;AAED,gBAAsBc,UAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACCd,YAAAA,QADD,GACYX,KAAK,CAAC0B,GAAN,CAAUxB,UAAU,GAAGD,MAAvB,EAChBY,IADgB,CACX,UAAAF,QAAQ,EAAI;AAChB,qBAAOA,QAAP;AACD,aAHgB,EAIhBI,KAJgB,CAIV,UAAAC,KAAK,EAAI;AACd,qBAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,aANgB,CADZ;AAAA,6CASE;AACLE,cAAAA,IAAI,EAAEd,WADD;AAELe,cAAAA,OAAO,EAAER;AAFJ,aATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios'\n\nimport { fsBeer, localProxy } from 'endpoints'\nimport { ADD_BEER,\n         OPEN_COOLER,\n         UPDATE_LIKES}\n from 'actions/types'\n\nexport function addBeer(beer) {\n  const req = { name: beer, likes: 0 }\n  const response = axios.post(localProxy + fsBeer, req)\n  .then(response => {\n    if (response.status === 204) {\n      return req\n    } else if (response.status === 200) {\n      return response\n    }\n  })\n  .catch(error => {\n    return new Error(error)\n  })\n\n  return {\n    type: ADD_BEER,\n    payload: req\n  }\n}\n\nexport function updateLikes(beer, typeOfLike) {\n  let numberOfLikes\n\n  if (typeOfLike === 'increase') {\n    numberOfLikes = beer.likes + 1\n  } else if (typeOfLike === 'decrease') {\n    numberOfLikes = beer.likes - 1\n  }\n\n  const response = axios.put(\n    localProxy + fsBeer + beer.id,\n    {likes: numberOfLikes}\n  ).then(response => {\n    if (response.status === 204) {\n      return {id: beer.id, name: beer.name, likes: numberOfLikes}\n    } else if (response.status === 200) {\n      return response\n    }\n  })\n  .catch(error => {\n    return new Error(error)\n  })\n\n  return {\n    type: UPDATE_LIKES,\n    payload: response\n  }\n}\n\nexport async function openCooler() {\n  const response = axios.get(localProxy + fsBeer)\n  .then(response => {\n    return response\n  })\n  .catch(error => {\n    return new Error(error)\n  })\n\n  return {\n    type: OPEN_COOLER,\n    payload: response\n  }\n}\n"]},"metadata":{},"sourceType":"module"}